[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Robin Penfold",
    "section": "",
    "text": "Brexit vote analysis\n\n\n\n\n\nI wanted more insight into the recent vote and so investigated each constituency, comparing the Brexit vote with that of the winning parliamentary party from 2016\n\n\n\n\n\n\nOct 12, 2016\n\n\n\n\n\n\n  \n\n\n\n\nWho bats best?\n\n\n\n\n\nCricket commentators often talk of changes in batting quality through the ages. Or they say that batting order matters to averages (or vice-versa). But is there anything in these questions?\n\n\n\n\n\n\nOct 9, 2016\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Who bats best?",
    "section": "",
    "text": "Let’s start with the data."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "At work – Leading my firm’s quant analysis of asset managers, using investment techniques and data science\nAs a volunteer – Helping charities to get more from their data with DataKind\nOtherwise – With my family and friends, and supporting sports teams that rarely win"
  },
  {
    "objectID": "posts/post-with-code/index.html#data",
    "href": "posts/post-with-code/index.html#data",
    "title": "Who bats best?",
    "section": "Data",
    "text": "Data\nA couple of years ago, I downloaded the top 200 averages for each batting order from the wonderful stats engine at espnCricinfo. I then excluded averages from players with fewer than twenty innings. I also only considered results against Australia, England, India, New Zealand, Pakistan, South Africa, Sri Lanka and the West Indies.\nHaving done so, I now tidy this data below and show its first six rows, for reference.\n\nsuppressMessages(library(tidyverse))\nlibrary(gganimate)\nlibrary(ggiraph)\nlibrary(glue)\nlibrary(htmlwidgets)\ntheme_set(theme_bw())\n  \nbatOrder <- read_csv(\"BattingOrder.csv\") |>  \n  mutate(\n    Name = word(Player, start = 1L, end = -2L),\n    fullCountry = word(Player, -1),\n    Country = str_sub(fullCountry, 2,-2)) %>% \n  filter(\n    Country %in% c(\"Aus\", \"Ban\", \"Eng\", \"India\", \"NZ\", \"Pak\", \"SA\", \"SL\", \"WI\")\n    ) |> \n  mutate(\n    Start = as.integer(str_sub(Span, 1, 4)),\n    Decade = 10*trunc(Start/10),\n    Name = str_replace_all(Name, \"'\", \" \") \n    ) |> \n  select(Name, Country, Start, Decade, Ave, Innings = Inns, Runs, Bat)\n\nglimpse(batOrder, width = 70)\n\nRows: 873\nColumns: 8\n$ Name    <chr> \"B Mitchell\", \"JB Hobbs\", \"RB Simpson\", \"L Hutton\", …\n$ Country <chr> \"SA\", \"Eng\", \"Aus\", \"Eng\", \"India\", \"Eng\", \"Eng\", \"S…\n$ Start   <int> 1931, 1908, 1961, 1938, 2002, 1924, 1986, 1996, 1948…\n$ Decade  <dbl> 1930, 1900, 1960, 1930, 2000, 1920, 1980, 1990, 1940…\n$ Ave     <dbl> 65.04, 58.14, 58.03, 57.74, 55.19, 54.38, 53.84, 52.…\n$ Innings <dbl> 26, 87, 28, 120, 21, 20, 21, 41, 23, 90, 105, 74, 35…\n$ Runs    <dbl> 1431, 4768, 1567, 6236, 1159, 979, 1023, 2002, 1106,…\n$ Bat     <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…"
  },
  {
    "objectID": "posts/post-with-code/index.html#charts",
    "href": "posts/post-with-code/index.html#charts",
    "title": "Who bats best?",
    "section": "Charts",
    "text": "Charts\nI then create the animation, using the splendid gganimate.\n\nbatOrder |> \n  ggplot(\n    aes(\n      x = Decade,\n      y = Ave,\n      color = Country, \n      size = Innings\n      )\n    ) +\n  geom_point(alpha = 1) +\n  labs(\n    x = \"Last decade of the batsman's career\",\n    y = \"\"\n    ) +\n  ggtitle(\n    'The 200 best players who have ever batted at {closest_state} in the order',\n    subtitle = 'Average when batting at that position'\n    ) + \n  transition_states(\n    states = Bat,\n    transition_length = 2,\n    state_length = 1\n    ) + \n  ease_aes('cubic-in-out')"
  },
  {
    "objectID": "posts/batting/index.html",
    "href": "posts/batting/index.html",
    "title": "Who bats best?",
    "section": "",
    "text": "A couple of years ago, I downloaded the top 200 averages for each batting order from the wonderful stats engine at espnCricinfo, before:\n\nIgnoring averages from players with fewer than twenty innings\nConsidering only results against Australia, England, India, New Zealand, Pakistan, South Africa, Sri Lanka and the West Indies\n\nFor reference, here are the first six rows of the resulting data.\n\nlibrary(tidyverse)\nlibrary(gganimate)\nlibrary(glue)\n  \nbatOrder <- read_csv(\"BattingOrder.csv\") |>  \n  mutate(\n    Name = word(Player, start = 1L, end = -2L),\n    fullCountry = word(Player, -1),\n    Country = str_sub(fullCountry, 2,-2)) %>% \n  filter(\n    Country %in% c(\"Aus\", \"Ban\", \"Eng\", \"India\", \"NZ\", \"Pak\", \"SA\", \"SL\", \"WI\")\n    ) |> \n  mutate(\n    Start = as.integer(str_sub(Span, 1, 4)),\n    Decade = 10*trunc(Start/10),\n    Name = str_replace_all(Name, \"'\", \" \") \n    ) |> \n  select(Name, Country, Start, Decade, Ave, Innings = Inns, Runs, Bat)\n\nglimpse(batOrder, width = 70)\n\nRows: 873\nColumns: 8\n$ Name    <chr> \"B Mitchell\", \"JB Hobbs\", \"RB Simpson\", \"L Hutton\", …\n$ Country <chr> \"SA\", \"Eng\", \"Aus\", \"Eng\", \"India\", \"Eng\", \"Eng\", \"S…\n$ Start   <int> 1931, 1908, 1961, 1938, 2002, 1924, 1986, 1996, 1948…\n$ Decade  <dbl> 1930, 1900, 1960, 1930, 2000, 1920, 1980, 1990, 1940…\n$ Ave     <dbl> 65.04, 58.14, 58.03, 57.74, 55.19, 54.38, 53.84, 52.…\n$ Innings <dbl> 26, 87, 28, 120, 21, 20, 21, 41, 23, 90, 105, 74, 35…\n$ Runs    <dbl> 1431, 4768, 1567, 6236, 1159, 979, 1023, 2002, 1106,…\n$ Bat     <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n\n\n\nWe can then analyse the data by batting order, using the splendid gganimate.\n\nbatOrder |> \n  ggplot(\n    aes(\n      x = Decade,\n      y = Ave,\n      color = Country, \n      size = Innings\n      )\n    ) +\n  geom_point(alpha = 1) +\n  labs(\n    x = \"Last decade of the batsman's career\",\n    y = \"\"\n    ) +\n  ggtitle(\n    'The best players who have ever batted at {closest_state} in the order',\n    subtitle = 'Average when batting at that position'\n    ) + \n  transition_states(\n    states = Bat,\n    transition_length = 2,\n    state_length = 1\n    ) + \n  ease_aes('cubic-in-out')"
  },
  {
    "objectID": "posts/batting/index.html#data",
    "href": "posts/batting/index.html#data",
    "title": "Who bats best?",
    "section": "Data",
    "text": "Data\nA couple of years ago, I downloaded the top 200 averages for each batting order from the wonderful stats engine at espnCricinfo. I then excluded averages from players with fewer than twenty innings. I also only considered results against Australia, England, India, New Zealand, Pakistan, South Africa, Sri Lanka and the West Indies.\nHaving done so, I now tidy this data below and show its first six rows, for reference.\n\nsuppressMessages(library(tidyverse))\nlibrary(gganimate)\nlibrary(ggiraph)\nlibrary(glue)\nlibrary(htmlwidgets)\ntheme_set(theme_bw())\n  \nbatOrder <- read_csv(\"BattingOrder.csv\") |>  \n  mutate(\n    Name = word(Player, start = 1L, end = -2L),\n    fullCountry = word(Player, -1),\n    Country = str_sub(fullCountry, 2,-2)) %>% \n  filter(\n    Country %in% c(\"Aus\", \"Ban\", \"Eng\", \"India\", \"NZ\", \"Pak\", \"SA\", \"SL\", \"WI\")\n    ) |> \n  mutate(\n    Start = as.integer(str_sub(Span, 1, 4)),\n    Decade = 10*trunc(Start/10),\n    Name = str_replace_all(Name, \"'\", \" \") \n    ) |> \n  select(Name, Country, Start, Decade, Ave, Innings = Inns, Runs, Bat)\n\nglimpse(batOrder, width = 70)\n\nRows: 873\nColumns: 8\n$ Name    <chr> \"B Mitchell\", \"JB Hobbs\", \"RB Simpson\", \"L Hutton\", …\n$ Country <chr> \"SA\", \"Eng\", \"Aus\", \"Eng\", \"India\", \"Eng\", \"Eng\", \"S…\n$ Start   <int> 1931, 1908, 1961, 1938, 2002, 1924, 1986, 1996, 1948…\n$ Decade  <dbl> 1930, 1900, 1960, 1930, 2000, 1920, 1980, 1990, 1940…\n$ Ave     <dbl> 65.04, 58.14, 58.03, 57.74, 55.19, 54.38, 53.84, 52.…\n$ Innings <dbl> 26, 87, 28, 120, 21, 20, 21, 41, 23, 90, 105, 74, 35…\n$ Runs    <dbl> 1431, 4768, 1567, 6236, 1159, 979, 1023, 2002, 1106,…\n$ Bat     <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…"
  },
  {
    "objectID": "posts/batting/index.html#charts",
    "href": "posts/batting/index.html#charts",
    "title": "Who bats best?",
    "section": "Charts",
    "text": "Charts\nI then create the animation, using the splendid gganimate.\n\nbatOrder |> \n  ggplot(\n    aes(\n      x = Decade,\n      y = Ave,\n      color = Country, \n      size = Innings\n      )\n    ) +\n  geom_point(alpha = 1) +\n  labs(\n    x = \"Last decade of the batsman's career\",\n    y = \"\"\n    ) +\n  ggtitle(\n    'The 200 best players who have ever batted at {closest_state} in the order',\n    subtitle = 'Average when batting at that position'\n    ) + \n  transition_states(\n    states = Bat,\n    transition_length = 2,\n    state_length = 1\n    ) + \n  ease_aes('cubic-in-out')"
  },
  {
    "objectID": "posts/brexit/index.html",
    "href": "posts/brexit/index.html",
    "title": "Brexit vote analysis",
    "section": "",
    "text": "You can scroll down for an interactive chart of each constituency, but the following chart shows the main detail.\n\n\nCode\nlibrary(dplyr)\nlibrary(forcats)\nlibrary(ggiraph)\nlibrary(glue)\nlibrary(ggplot2)\nlibrary(ggtext)\nlibrary(parlitools)\nlibrary(scales)\n\nmap_details <- west_hex_map\nsf::st_crs(map_details) = 4326\n\ndata_brexit <- leave_votes_west |>  \n  rename(`Leave Vote` = figure_to_use) |> \n  mutate(\n    `Party of MP` = as_factor(party_2016), \n    `Party of MP` = \n      recode(\n        `Party of MP`,\n        `Scottish National Party` = \"SNP\", \n        `Liberal Democrat` = \"LibDem\"\n        ),\n    `Party of MP` = fct_lump(\n      `Party of MP`,\n      n = 5, \n      other_level = \"Other\"\n      )\n    ) |> \n  left_join(\n    map_details,\n    by = c(\"ons_const_id\" = \"gss_code\")\n    ) |> \n  mutate(\n    constituency = if_else(\n      is.na(constituency_name.x), \n      constituency_name.y, \n      constituency_name.x\n      ),\n    vote_status = case_when(\n      (`Leave Vote` >= 0) & (`Leave Vote` <= 0.4) ~ \"Remain\",\n      (`Leave Vote` > 0.4) & (`Leave Vote` <= 0.6) ~ \"Close Call\",\n      (`Leave Vote` > 0.6) & (`Leave Vote` <= 1) ~ \"Leave\",\n      TRUE ~ \"Error\"\n      ),\n    vote_status = as_factor(vote_status),\n    vote_status = fct_relevel(vote_status, sort)\n    ) |> \n  select(constituency, `Leave Vote`, `Party of MP`, ons_const_id, vote_status, geometry)\n\nhtml_text <- glue(\"<span>Showing constituencies with <span style='color:#0087DC;'>Conservative</span>, <span style='color:#DC241F;'>Labour</span>, <span style='color:#FFFF00;'>SNP</span>, <span style='color:#FDBB30;'>LibDem</span> and <span style='color:#AFAFAFAF;'>Other</span> MPs</span><br/>\")\n\ndata_brexit |> \n  ggplot() + \n  geom_sf(\n    aes(\n      group = constituency,\n      geometry = geometry,\n      fill = `Party of MP`\n      ),\n    size = 0.1\n    ) + \n  scale_fill_manual(\n    values = c(\n      Conservative = \"#0087DC\",\n      Labour = \"#DC241F\",\n      SNP = \"#FFFF00\",\n      LibDem = \"#FDBB30\",\n      Other = \"grey80\"\n      )\n    ) + \n  facet_grid(~vote_status, margins = TRUE, drop = TRUE) +\n  theme_void() + \n  labs(\n    title = \"Leave voters seem to have a bigger split in party allegiance\",\n    subtitle = html_text\n  ) + \n  theme(\n    plot.title.position = \"plot\",\n    plot.subtitle = element_markdown(),\n    legend.position = \"none\",\n    plot.background = element_rect(\n      fill = \"grey90\", \n      colour = \"grey90\", \n      linewidth = 1\n      ),\n    plot.margin = margin(0.5, 0.5, 0.5, 0.5, \"cm\")\n    )\n\n\n\n\n\nBasically, outside of Scotland, there seems to be a bigger split in Leaver constituencies than in their Remainer counterparts.\nTo get the details for each constituency, hover over the relevant spot in the chart below.\n\n\nCode\ngg <- data_brexit |> \n  ggplot() + \n  geom_sf_interactive(\n    aes(\n      group = constituency,\n      geometry = geometry,\n      fill = `Leave Vote`,\n      colour = `Party of MP`,\n      tooltip = paste0(\n        constituency, \n        \"\\n MP: \",\n        `Party of MP`,\n        \"\\n Leave vote: \",\n        round(`Leave Vote` * 100, 0),\n        \"%\"\n        )\n    ),\n    size = 0.1\n  ) + \n  scale_fill_gradient_interactive(\n    low = \"white\", \n    high = \"#63666a\",\n    labels = percent_format(accuracy = 1)\n    ) +\n  scale_colour_manual_interactive(\n    values = c(\n      Conservative = \"#0087DC\",\n      Labour = \"#DC241F\",\n      SNP = \"#FFFF00\",\n      LibDem = \"#FDBB30\",\n      Other = \"grey80\"\n      )\n    ) + \n  theme_void() +\n  labs(\n    title = \"Leave vote and winning party, by constituency\", \n    subtitle = \"Hover over a point for the details\"\n  ) + \n  theme(\n    legend.position = \"right\",\n    legend.text = element_text(size = 6, hjust = 0),\n    legend.title = element_text(size = 8)\n    )\n\ngirafe(ggobj = gg)"
  }
]