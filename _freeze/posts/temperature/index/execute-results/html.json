{
  "hash": "32b015552af56150660349e8339afefa",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Making sense of English seasons\"\ndate: \"2025-01-31\"\ncategories: [weather]\nimage: \"map.png\"\ncode-fold: true\ncode-summary: \"</>\"\ndf-print: paged\ndescription: |\n  Or how it only takes four days of Autumn cooling to undo five days of Spring warming.\n---\n\n\n\nLike so many Brits, I'm obsessed with the weather. I ask questions like, \"When is spring coming?\" and \"How long is summer?\"\n\nAnnoyingly, though, I never had reasonable answers for these sorts of questions. And, for that reason, I thought I'd consult the data to get better answers.\n\nI turns out that this data-driven approach helps, as I now have better working definitions of the seasons and can judge my expectations accordingly.\n\nBefore we get to those conclusions, I take two steps with the data.\n\nFirst, I get it and clean it. Specifically, for each day of the year, I collect the maximum temperature achieved at Heathrow in each year from 1990 to 2022. I then average these 33 data points to get one value for the typical maximum temperature on that day at Heathrow.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggformula)\nlibrary(lubridate)\nlibrary(riem)\n\n# riem_stations(network = \"GB__ASOS\")\n\n# data_temp <- riem_measures(\n#   station = \"EGLL\",\n#   date_start = \"1990-01-01\",\n#   date_end = \"2023-12-31\"\n#   )\n\n# write_rds(data_temp, \"data_temp.rds\")\n\ndata_temp <- read_rds(\"data_temp.rds\")\n\ndata <- data_temp |> \n  select(valid, tmpf) |> \n  mutate(\n    value_year = year(valid),\n    value_week = if_else(week(valid) == 53, 52, week(valid)),\n    value_month = month(valid),\n    value_day = day(valid),\n    value_hour = hour(valid),\n    value_minute = minute(valid),\n    value_dayofweek = wday(valid),\n    value_dayofyear = yday(valid),\n    value_fortnight = ceiling(value_week / 2)\n  ) |> \n  summarise(\n    temp_max = max(tmpf, na.rm = TRUE),\n    .by = c(value_year, value_month, value_day)\n    ) |> \n  summarise(\n    temp_max_ave = mean(temp_max, na.rm = TRUE),\n    .by = c(value_month, value_day)\n    ) |> \n  rownames_to_column(var = \"value_daynumber\") |> \n  mutate(\n    value_daynumber = as.integer(value_daynumber),\n    name_month = as_factor(month.name[value_month]),\n    value_date = make_date(year = 2019, month = value_month, day = value_day)\n    ) |> \n  filter(!(value_month == 2 & value_day == 29))\n\nglimpse(data, width = 80)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 365\nColumns: 6\n$ value_daynumber <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,â€¦\n$ value_month     <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, â€¦\n$ value_day       <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,â€¦\n$ temp_max_ave    <dbl> 47.56235, 46.76294, 46.39176, 46.17941, 47.32471, 47.6â€¦\n$ name_month      <fct> January, January, January, January, January, January, â€¦\n$ value_date      <date> 2019-01-01, 2019-01-02, 2019-01-03, 2019-01-04, 2019-â€¦\n```\n\n\n:::\n:::\n\n\n\n<br/>\n\nSecond, I'll chart how this average temperature varies by the day of the year.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_seasons <- data |> \n  ggplot(\n    aes(\n      x = value_daynumber,\n      y = temp_max_ave,\n      colour = name_month\n      )\n    ) + \n  scale_y_continuous(\n    labels = 40 + 0:3 * 10, \n    breaks = 40 + 0:3 * 10, \n    minor_breaks = NULL\n    ) +\n  scale_x_continuous(breaks = 30 * 0:12) + \n  scale_color_brewer(type = \"qual\", palette = 3) +\n  geom_point() + \n  theme_minimal() + \n  theme(\n    plot.title.position = 'plot',\n    plot.subtitle = element_text(size = 10),\n    axis.title.x = element_text(size = 10, hjust = 1),\n    legend.title = element_blank(),\n    panel.grid = element_blank(),\n    axis.line = element_line(colour = \"grey50\"),\n    axis.ticks = element_line(colour = \"grey50\")\n    ) + \n  labs(\n    title = \"Typical Maximum Daily Temperature at Heathrow\",\n    subtitle = \"Daily averages in Fahrenheit from 1990 to 2022\\n\",\n    y = NULL,\n    x = \"\\nDay of the year\"\n  ) \n\nplot_seasons\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n\n<br/>\n\nOK, so that chart helps, but it is more useful if we add some context to it.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_seasons + \n  geom_spline(\n    aes(\n      x = value_daynumber,\n      y = temp_max_ave\n      ),\n    spar = 0.66,\n    colour = 'magenta', \n    linewidth = 1 \n    ) +\n  geom_abline(slope = 0.19, intercept = 38.5, color = 'grey15') + \n  geom_abline(slope = -0.25, intercept = 132.5, color = 'grey15') + \n  geom_vline(xintercept = 60, color = 'grey50', linetype = 3) +\n  geom_vline(xintercept = 165, color = 'grey50', linetype = 3) +\n  geom_vline(xintercept = 250, color = 'grey50', linetype = 3) +\n  geom_vline(xintercept = 330, color = 'grey50', linetype = 3) + \n  geom_hline(yintercept = 50, color = 'grey50', linetype = 3) + \n  geom_hline(yintercept = 70, color = 'grey50', linetype = 3)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n<br/>\n\nSo, what does this mean?\n\nBased upon the chart above, I will now use the following definitions:\n\n-   **Long Linear Spring** warms linearly and is the longest season, running from March until mid June\n-   **Short Summer** is the shortest season ... ðŸ™„ ... lasting from mid June until the end of August, when typical daily temperatures exceed 70Â°F\n-   **Linear Autumn** cools linearly over September, October and November\n-   **Winter** consists of December, January and February, when typical daily temperatures fall below 50Â°F\n\nSo, daily temperature change in Spring and Autumn is typically linear. Sadly, though, Autumn cools faster than Spring warms. Specifically, Spring sees maximum temperatures typically rise by 0.19Â°F per day, whilst the corresponding decline in Autumn is 0.25Â°F per day. In other words, five days of gains in Spring are needed to counteract four days of losses in Autumn.\n\n<br/>\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}